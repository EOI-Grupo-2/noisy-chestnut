name: ${COMPOSE_NAME}

volumes:
  produccion_pgdata:
  produccion_javadata:
  produccion_images:

services:
  java:
    image: ${PROJECT_NAME}:${VERSION:-snapshot}
    ports:
      - "${PUERTO_DESARROLLO}:8080"
    expose:
      - "8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/desarrollodb
      SPRING_DATASOURCE_USERNAME: desarrollouser
      SPRING_DATASOURCE_PASSWORD: desarrollopassword
      SPRING_PROFILES_ACTIVE: desarrollo
      UPLOAD_PATH: file:/workspace/uploads/
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:${PUERTO_DESARROLLO}/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: always
    volumes:
      - produccion_javadata:/var/lib/data/
      - produccion_images:/workspace/uploads
    command: >
      sh -c "mkdir -p /workspace/uploads/users /workspace/uploads/places /workspace/uploads/publications /workspace/uploads/concerts &&
             chmod -R 777 /workspace/uploads &&
             java -jar app.jar"

  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: 'desarrollodb'
      POSTGRES_USER: 'desarrollouser'
      POSTGRES_PASSWORD: 'desarrollopassword'
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "desarrollouser", "-d", "postgres"  ]
      timeout: 20s
      retries: 10
    restart: always
    ports:
      - "${PUERTO_DB_DESARROLLO}:5432"
    volumes:
      - produccion_pgdata:/var/lib/postgresql/data/